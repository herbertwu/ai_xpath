/*
 * This file was generated by the Gradle ("init(" task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation ("dev.langchain4j:langchain4j-ollama:0.32.0")
    implementation ("dev.langchain4j:langchain4j-mistral-ai:0.32.0")
    implementation ("dev.langchain4j:langchain4j-open-ai:0.32.0")
    implementation ("dev.langchain4j:langchain4j:0.32.0")
    //implementation ("dev.langchain4j:langchain4j-easy-rag:1.0.0-beta1")
    
    implementation ("dev.langchain4j:langchain4j-google-ai-gemini:1.0.0-beta1")
    
    implementation ("org.seleniumhq.selenium:selenium-java:4.26.0")
    
    implementation ("org.apache.commons:commons-lang3:3.12.0")
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
    
    testImplementation ("org.easymock:easymock:4.3")
    testImplementation ("org.hamcrest:hamcrest-core:1.3")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = "org.brx.ai.LLMElementFinder"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
